name: 'Publish Windows Console Exe Distribution'
description: 'Publishes the windows console exe'
inputs:
  dotnet-version:
    description: 'Version of dotnet to install'
    required: true
  os:
    description: 'The OS we are running on'
    required: true
outputs:
  artifact:
    description: 'Path to the published artifact'
    value: ${{ github.workspace }}/dist/${{ inputs.os }}
runs:
  using: "composite"
  steps:
    - name: Setup .NET Core SDK ${{ inputs.dotnet-version }}
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ inputs.dotnet-version }}
    
    - name: Clean
      run: dotnet clean ${{ github.workspace }}/src/ConsoleClient/ConsoleClient.csproj --configuration Release && dotnet nuget locals all --clear
      shell: pwsh
    
    - name: Restore
      run: dotnet restore ${{ github.workspace }}/src/ConsoleClient/ConsoleClient.csproj
      shell: pwsh

    - name: Prepare env
      run: |
          echo "BUILD_VERSION=$Env:GITHUB_RUN_NUMBER-$Env:GITHUB_RUN_ID" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
          echo "RUNNER_TOOL_CACHE=$Env:RUNNER_TOOL_CACHE" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
      shell: pwsh
        
    - name: Publish ${{ inputs.os}}
      run: dotnet publish ${{ github.workspace }}/src/ConsoleClient/ConsoleClient.csproj --no-restore -c Release -r ${{ inputs.os }} -o ${{ github.workspace }}/dist/${{ inputs.os }} --version-suffix ${{ env.BUILD_VERSION }} --self-contained true
      shell: pwsh

    - name: Copy Config to Distro
      run: cp ${{ github.workspace }}/configuration.example.json ${{ github.workspace }}/dist/${{ inputs.os }}/configuration.local.json
      shell: pwsh

    # Create Build Artifact
    - name: Upload Artifact console_${{ inputs.os }}_${{ env.BUILD_VERSION }}
      uses: actions/upload-artifact@v3
      with:
        name: console_${{ inputs.os }}_${{ env.BUILD_VERSION }}
        path: ${{ github.workspace }}/dist/${{ inputs.os }}
