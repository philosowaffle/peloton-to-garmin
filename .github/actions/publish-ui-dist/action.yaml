name: 'Publish UI Distribution'
description: 'Publishes the UI Distribution'
inputs:
  dotnet-version:
    description: 'Version of dotnet to install'
    required: true
  framework:
    description: 'DotNet Framework'
    required: true
  os:
    description: 'The OS we are running on'
    required: true
  secret_maui_signing_key:
    description: 'The MAUI signing Key'
    required: true
  secret_maui_pfx_password:
    description: 'The mAUI PFX Password'
    required: true
runs:
  using: "composite"
  steps:
    - name: Setup .NET Core SDK ${{ inputs.dotnet-version }}
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ inputs.dotnet-version }}

    - name: Install MAUI Workloads
      run: dotnet workload install maui-desktop --ignore-failed-sources # TODO: change back to generic "maui" instead of "maui-desktop" to install deps for all platforms
      shell: pwsh
      
    - name: Clean
      run: dotnet clean ${{ github.workspace }}/src/ClientUI/ClientUI.csproj --configuration Release && dotnet nuget locals all --clear
      shell: pwsh
      
    - name: Restore
      run: dotnet restore ${{ github.workspace }}/src/ClientUI/ClientUI.csproj
      shell: pwsh

    - name: Prepare env
      run: |
          echo "BUILD_VERSION=$Env:GITHUB_RUN_NUMBER-$Env:GITHUB_RUN_ID" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
          echo "RUNNER_TOOL_CACHE=$Env:RUNNER_TOOL_CACHE" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
      shell: pwsh
    
    - name: Decrypt PFX file
      run: |
        echo "${{ inputs.secret_maui_signing_key }}" > cert.pfx.asc
        certutil -decode cert.pfx.asc cert.pfx
      shell: pwsh
    
    - name: Add cert to Store
      run: certutil -user -q -p "${{ inputs.secret_maui_pfx_password }}" -importpfx cert.pfx NoRoot
      shell: cmd
          
    - name: Publish ${{ inputs.os }}
      run: dotnet publish ${{ github.workspace }}/src/ClientUI/ClientUI.csproj --no-restore -c Release -f ${{ inputs.framework }} -p:RuntimeIdentifierOverride=${{ inputs.os }} -o ${{ github.workspace }}/dist/${{ inputs.os }}-ui
      shell: pwsh

    # Create Build Artifact
    - name: Upload Artifact ui_${{ inputs.os }}_${{ env.BUILD_VERSION }}
      uses: actions/upload-artifact@v3
      with:
        name: ui_${{ inputs.os }}_${{ env.BUILD_VERSION }}
        path: ${{ github.workspace }}/dist/${{ inputs.os }}-ui