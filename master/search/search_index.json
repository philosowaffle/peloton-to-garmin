{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Sync your Peloton workouts to Garmin locally and for free.</p> <p></p> <ul> <li>Fetch latest workouts from Peloton</li> <li>Create backups</li> <li>Automatically upload your workouts to Garmin</li> <li>And more...</li> </ul>"},{"location":"#head-on-over-to-the-install-page-to-get-started","title":"Head on over to the Install page to get started!","text":""},{"location":"#example-usage","title":"Example Usage","text":"<ol> <li>Do a Peloton Workout!<ol> <li>If you use your Garmin device to send HR data to the Peloton Bike or Tread then at the end of your workout do not save the workout on your watch, discard it.</li> </ol> </li> <li>Sync your workout using P2G<ol> <li>You can go to your computer and manually run P2G to sync recent workouts</li> <li>OR You can configure P2G to run in the background on your computer, syncing workouts once a day</li> </ol> </li> </ol> <p>Supported Platforms</p> <ul> <li>Windows</li> <li>Mac</li> <li>Linux</li> <li>Docker</li> </ul>"},{"location":"#contributors","title":"Contributors","text":"<p>Special thanks to all the contributors who have helped improve this project!</p>"},{"location":"contributing/","title":"Contributing","text":"<p>Enhancements and fixes are always welcome. Feel free to contribute to any of the Issues not already assigned to another person.</p>"},{"location":"contributing/#pull-requests","title":"Pull Requests","text":"<p>Ensure that your code:</p> <ol> <li>Compiles</li> <li>Follows established conventions of the codebase</li> <li>Unit tests have been added and pass</li> <li>Docs have been updated</li> </ol>"},{"location":"contributing/#development","title":"Development","text":"<ol> <li>Install dotent 6.0 runtime</li> </ol> <pre><code>&gt; dotnet restore\n&gt; dotnet build\n&gt; dotnet run ./src/ConsoleClient/ConsoleClient.csproj\n</code></pre>"},{"location":"contributing/#package-windows-exe","title":"Package Windows exe","text":"<pre><code>&gt; dotnet publish ./src/ConsoleClient/ConsoleClient.csproj --no-restore -c Release -r win10-x64 -o ./dist --version-suffix local\n</code></pre>"},{"location":"contributing/#developing-against-garmin-upload-python-library","title":"Developing against garmin-upload python library","text":"<ol> <li>Install Python 3 and pip</li> <li>Set <code>\"PythonAndGUploadInstalled\": true</code></li> </ol> <pre><code>&gt; cd peloton-to-garmin\n&gt; cd python\n&gt; pip install -r requirements.txt\n</code></pre>"},{"location":"contributing/#compile-python-exe","title":"Compile python exe","text":"<pre><code>&gt; cd python\n&gt; pip install -r requirements.txt\n&gt; pip install pyinstaller\n&gt; pyinstaller -n upload --distpath ./ --console --clean --noconfirm upload.py\n</code></pre>"},{"location":"contributing/#contribute-to-the-docs","title":"Contribute to the docs","text":"<p>The docs site can be run locally using docker for faster development.</p> <pre><code>&gt; cd peloton-to-garmin/docs\n&gt; docker-compose up\n</code></pre> <p>Browse to <code>http://localhost:4000</code> to see the docs site. The docker container watches for file changes and will hot reload.  Some of the navigation links may not work as expected locally, if you see the url change to <code>http://0.0.0.0/somePage.html</code> simply change it to <code>http://localhost/somePage.html</code> and the page will render.</p>"},{"location":"faq/","title":"F.A.Q.","text":"<p>Below are a list of commonly asked questions. For even more help head on over to the discussion forum.</p>"},{"location":"faq/#vo2-max-te-tss-and-more","title":"VO2 Max, TE, TSS and more...","text":"<p>Checkout the dedicated Category in the Discussion forum, I recommend starting with this post.</p>"},{"location":"faq/#garmin-two-step-verification","title":"Garmin Two Step Verification","text":"<p>Yes, P2G supports Garmin's Multi-factor Authentication option!  However,oOnly some install options have support so you'll be limited to one of these options.</p>"},{"location":"features/","title":"Features","text":"<p>Convert, Backup, and Sync your Peloton workouts to Garmin Connect locally and for free.</p>"},{"location":"features/#workout-data","title":"Workout Data","text":"<ol> <li>Workout Types Supported<ol> <li>Bike</li> <li>Tread</li> <li>Rower</li> <li>Meditation</li> <li>Strength</li> <li>Outdoor</li> <li>and more</li> </ol> </li> <li>Workout Data<ol> <li>Heart Rate</li> <li>Cadence</li> <li>Target Cadence</li> <li>Distance</li> <li>Power</li> <li>Laps</li> <li>and more</li> </ol> </li> <li>Strength Data<ol> <li>Exercise Name</li> <li>Rep count</li> <li>Weight</li> </ol> </li> </ol>"},{"location":"features/#garmin-sync","title":"Garmin Sync","text":"<ol> <li>Supports Garmin accounts protected by Two Step Verification</li> <li>Synced workouts count towards Garmin Badges and Challenges</li> <li>Synced workouts count towards VO2 Max 1 and Training Stress Scores</li> </ol>"},{"location":"features/#p2g","title":"P2G","text":"<ol> <li>Syncs on-demand or on a schedule</li> <li>Highly configurable</li> <li>Docker-ized</li> <li>OpenTelemetry for the data nerds</li> </ol>"},{"location":"features/#typical-usage","title":"Typical Usage","text":"<ol> <li>Do a Peloton Workout!<ol> <li>If you use your Garmin device to send HR data to the Peloton Bike or Tread then at the end of your workout do not save the workout on your watch, discard it.</li> </ol> </li> <li>Sync your workout with P2G<ol> <li>You can go to your computer and manually run P2G to sync recent workouts</li> <li>OR You can configure P2G to run in the background on your computer, syncing workouts once a day</li> </ol> </li> <li>P2G can be configured to download your workout data and save it to your computer AND it can automatically upload those workouts to Garmin Connect</li> </ol>"},{"location":"features/#screenshots","title":"Screenshots","text":""},{"location":"features/#converted-and-imported-cycling-workout","title":"Converted and imported Cycling Workout","text":""},{"location":"features/#stats-view","title":"Stats View","text":""},{"location":"features/#cadence-targets","title":"Cadence Targets","text":""},{"location":"features/#laps","title":"Laps","text":""},{"location":"features/#ui","title":"UI","text":""},{"location":"help/","title":"Help","text":"<p>If you are encountering a problem, here are some resources that may help you.</p>"},{"location":"help/#discussion-forum","title":"Discussion Forum","text":"<p>Search the Discussion Forum to see if your topic has already been discussed before.  Take note that the search bar lets you filter by <code>open</code> and <code>closed</code> discussions, it is beneficial to check both.</p> <p>Have a question? Need help with something?</p> <p>The Discussion Forum is the best place to post.  When posting please ensure you are providing the right details.</p>"},{"location":"help/#issues","title":"Issues","text":"<p>Bugs, feature requests, and more often get tracked in the Issues tab in Github. This is also a great place to search for information.  Particularly important issues that impact many people will usually be pinned and highly visible.  Take note that the search bar lets you filter by <code>open</code> and <code>closed</code> issues, it is beneficial to check both.</p> <p>Have a feature idea? Encountered a bug?</p> <p>Creating a new Issue is the best place to post.  When posting please ensure you are providing the right details.</p>"},{"location":"help/#providing-the-right-details","title":"Providing the right details","text":"<p>P2G can be run in a variety of different ways and its difficult for people to provide help if they have to guess about your particular setup.  When asking for help, or logging a bug, please be sure to include the below information at a minimum for the most effective help:</p> <ol> <li>How are you running P2G? In other words, which install mtehod did you choose when you setup P2G?</li> <li>What version of P2G are you running?</li> <li>A copy of the log files that were generated, ideally the entire log file, not just the part where you see an error. See Finding logs.</li> </ol>"},{"location":"help/#finding-logs","title":"Finding logs","text":""},{"location":"help/#headless-docker-headless","title":"Headless / Docker Headless","text":"<p>The log files will be written to <code>output/log&lt;datetime&gt;.txt</code>.</p>"},{"location":"help/#windows-ui-web-ui","title":"Windows UI / Web UI","text":"<p>Naviate to the <code>About</code> page, then click the <code>Logs</code> tab.  Additionally, the log files will be written to <code>output/log&lt;datetime&gt;.txt</code>.</p>"},{"location":"help/#github-actions","title":"GitHub Actions","text":"<p>If your forked repository is public, then you can simply provide a link to the repository and people can view the necessary logs from there.  If your repository is private then to find the logs for a given run:</p> <ol> <li>Go to your copy of the repository</li> <li>Select the <code>Actions</code> tab, along the top left of the view</li> <li>Click the very first `Sync workflow`` item to open up that workflow</li> <li>In the left hand menu, under Jobs click <code>sync</code></li> <li>Finally, expand the item that says <code>Run /app/PelotonToGarminConsole</code></li> <li>Share the logs from this view</li> </ol>"},{"location":"help/#finding-version","title":"Finding version","text":"<p>Version information is always written as the first thing in the log file.  Additionally, on a UI version of P2G you can find the version information on the <code>About</code> page.</p>"},{"location":"configuration/","title":"Configuration","text":""},{"location":"configuration/#how-are-you-running-p2g","title":"How are you running P2G?","text":"<ol> <li>I'm using the Web UI</li> <li>I'm using the Windows GUI</li> <li>I'm using GitHub Actions</li> <li>I'm running Headless</li> </ol>"},{"location":"configuration/#web-ui-configuration","title":"Web UI Configuration","text":"<p>The most common settings can be configured via the UI itself.  Additional lower level settings can be provided via config file.</p> <ol> <li>Settings<ol> <li>App Settings</li> <li>Conversion Settings</li> <li>Peloton Settings</li> <li>Garmin Settings</li> </ol> </li> <li>Low Level Settings<ol> <li>Api Configuration</li> <li>Web UI Configuration</li> </ol> </li> </ol>"},{"location":"configuration/#windows-ui-configuration","title":"Windows UI Configuration","text":"<p>The most common settings can be configured via the UI itself.</p> <ol> <li>Settings<ol> <li>App Settings</li> <li>Conversion Settings</li> <li>Peloton Settings</li> <li>Garmin Settings</li> </ol> </li> </ol>"},{"location":"configuration/#config-file","title":"Config File","text":"<p>When using a flavor of P2G that does not provide a user interface, all settings are provided via a JSON config file.</p> <p>P2G looks for a file named <code>configuration.local.json</code> in the same directory where it is run to load its settings.</p> <p>The structure of this file is as follows:</p> <pre><code>{\n    \"App\": { /**(1)!**/ },\n    \"Format\": { /**(2)!**/ },\n    \"Peloton\": { /**(3)!**/ },\n    \"Garmin\": { /**(4)!**/ },\n    \"Observability\": { /**(5)!**/ }\n}\n</code></pre> <ol> <li>Go to App Settings Documentation</li> <li>Go to Format Settings Documentation</li> <li>Go to Peloton Settings Documentation</li> <li>Go to Garmin Settings Documentation</li> <li>Go to Observability Settings Documentation</li> </ol> <p>Tip</p> <p>P2G provides an example config to get you started.</p>"},{"location":"configuration/#additional-configuration-options","title":"Additional Configuration Options","text":"<p>P2G supports configuration via</p> <ol> <li>command line arguments</li> <li>environment variables</li> <li>json config file</li> <li>via the user interface</li> </ol> <p>By default, P2G looks for a file named <code>configuration.local.json</code> in the same directory where it is run.</p>"},{"location":"configuration/#config-precedence","title":"Config Precedence","text":"<p>The following defines the precedence in which config definitions are honored. With the first items having higher precendence than the next items.</p> <ol> <li>Command Line</li> <li>Environment Variables</li> <li>Config File</li> </ol> <p>For example, if you defined your Peloton credentials ONLY in the Config file, then the Config file credentials will be used.</p> <p>If you defined your credentials in both the Config file AND the Environment variables, then the Environment variable credentials will be used.</p> <p>If you defined credentials using all 3 methods (config file, env, and command line), then the credentials provided via the command line will be used.</p>"},{"location":"configuration/#command-line-configuration","title":"Command Line Configuration","text":"<p>All of the values defined in the Json config file can also be defined as command line arguments. This functionality is provided by the default dotnet IConfiguration interface.</p>"},{"location":"configuration/#environment-variable-configuration","title":"Environment Variable Configuration","text":"<p>All of the values defined in the Json config file can also be defined as environment variables. This functionality is provided by the default dotnet IConfiguration interface.</p> <p>The variables use the following convention, note the use of both single and double underscores:</p> <pre><code>P2G_CONFIGSECTION__CONFIGPROPERTY=value\n</code></pre>"},{"location":"configuration/#example-app-config","title":"Example App Config","text":"<pre><code>P2G_APP__WORKINGDIRECTORY\nP2G_APP__ENABLEPOLLING\nP2G_APP__POLLINGINTERVALSECONDS\nP2G_APP__PYTHONANDGUPLOADINSTALLED\n</code></pre>"},{"location":"configuration/#example-arrays","title":"Example Arrays","text":"<pre><code>P2G_PELOTON__EXCLUDEWORKOUTTYPES__0=\"meditation\"\nP2G_PELOTON__EXCLUDEWORKOUTTYPES__1=\"stretching\"\nP2G_PELOTON__EXCLUDEWORKOUTTYPES__2=\"yoga\"\n...and so on\n</code></pre>"},{"location":"configuration/#example-nested-sections","title":"Example Nested Sections","text":"<p>For nested config sections, continue to use the same naming convention of defining the entire json path using <code>__</code> double underscores, and 0 based indexing for array values.</p> <pre><code>P2G_OBSERVABILITY__SERILOG__WRITETO__0__NAME=\"File\"\n</code></pre>"},{"location":"configuration/api/","title":"API File Configuration","text":"<p>Tip</p> <p>These settings only apply if you are running an Instance of the API.  P2G provides some recommended config files to get you started.</p> <p>Some lower level configuration cannot be provided via the web user interface and can only be provided by config file.</p> <p>The Api looks for a file named <code>configuration.local.json</code> in the same directory where it is run.  Below is an example of the structure of this config file.</p> <pre><code>{\n  \"Api\": { /** (1)! **/ }, \n  \"Observability\": { /** (2)! **/ }\n}\n</code></pre> <ol> <li>Jump to Api Config Documentation</li> <li>Go to Observability Config Documentation</li> </ol>"},{"location":"configuration/api/#api-config","title":"Api Config","text":"<p>Warning</p> <p>Most people should not need to change this setting.</p> <pre><code>  \"Api\": {\n        \"HostUrl\": \"http://*:8080\"\n      }\n</code></pre> Field Required Default UI Setting Location Description HostUrl no <code>http://localhost:8080</code> none The host and port the WebUI should bind to and listen on."},{"location":"configuration/app/","title":"App Settings","text":"<p>The App Settings provide global settings for the P2G application.</p>"},{"location":"configuration/app/#settings-location","title":"Settings location","text":"Run Method Location Web UI UI &gt; Settings &gt; App Tab Windows Exe UI &gt; Settings &gt; App Tab GitHubAction Config Section in Workflow Headless (Docker or Console) Config section in <code>configuration.local.json</code>"},{"location":"configuration/app/#file-configuration","title":"File Configuration","text":"<pre><code> \"App\": {\n    \"EnablePolling\": true,\n    \"PollingIntervalSeconds\": 86400,\n    \"CheckForUpdates\": true\n  }\n</code></pre>"},{"location":"configuration/app/#settings-overview","title":"Settings Overview","text":"Field Required Default Description EnablePolling no <code>true</code> <code>true</code> if you wish P2G to run continuously and poll Peloton for new workouts. PollingIntervalSeconds no 86400 The polling interval in seconds determines how frequently P2G should check for new workouts. Be warned, that setting this to a frequency of hourly or less may get you flagged by Peloton as a bad actor and they may reset your password. The default is set to Daily. CheckForUpdates no <code>true</code> <code>true</code> if P2G should check for updates and write a log message if a new release is available. If using the UI this message will display there as well."},{"location":"configuration/exercise-types/","title":"Exercise Types","text":"<pre><code>  Cycling\n  Outdoor Cycling\n  BikeBootcamp\n  TreadmillRunning\n  OutdoorRunning\n  TreadmillWalking\n  OutdoorWalking\n  Cardio\n  Circuit\n  Strength\n  Stretching\n  Yoga\n  Meditation\n</code></pre>"},{"location":"configuration/format/","title":"Format Settings","text":"<p>The Format Settings provide settings related to how workouts should be converted from Peloton.</p>"},{"location":"configuration/format/#settings-location","title":"Settings location","text":"Run Method Location Web UI UI &gt; Settings &gt; Conversion Tab Windows Exe UI &gt; Settings &gt; Conversion Tab GitHubAction Config Section in Workflow Headless (Docker or Console) Config section in <code>configuration.local.json</code>"},{"location":"configuration/format/#file-configuration","title":"File Configuration","text":"<pre><code>\"Format\": {\n    \"Fit\": true,\n    \"Json\": false,\n    \"Tcx\": false,\n    \"SaveLocalCopy\": false,\n    \"IncldudeTimeInHRZones\": false,\n    \"IncludeTimeInPowerZones\": false,\n    \"DeviceInfoSettings\": { /**(1)!**/ }\n    \"Cycling\": {\n      \"PreferredLapType\": \"Class_Targets\"\n    },\n    \"Running\": {\n      \"PreferredLapType\": \"Distance\"\n    },\n    \"Rowing\": {\n      \"PreferredLapType\": \"Class_Segments\"\n    },\n    \"Strength\": {\n      \"DefaultSecondsPerRep\": 3\n    },\n    \"WorkoutTitleTemplate\": \"{{PelotonWorkoutTitle}} with {{PelotonInstructorName}}\"\n  }\n</code></pre> <ol> <li>Jump to Device Info Settings Documentation</li> </ol>"},{"location":"configuration/format/#settings-overview","title":"Settings Overview","text":"Field Required Default Description Fit no <code>false</code> <code>true</code> indicates you wish downloaded workouts to be converted to FIT Json no <code>false</code> <code>true</code> indicates you wish downloaded workouts to be converted to JSON. This will automatically save a local copy when enabled. Tcx no <code>false</code> <code>true</code> indicates you wish downloaded workouts to be converted to TCX SaveLocalCopy no <code>false</code> <code>true</code> will save any converted workouts to the output directory. IncludeTimeInHRZones no <code>false</code> Only use this if you are unable to configure your Max HR on Garmin Connect. When set to True, P2G will attempt to capture the time spent in each HR Zone per the data returned by Peloton. See understanding P2G provided zones. IncludePowerInHRZones no <code>false</code> Only use this if you are unable to configure your FTP and Power Zones on Garmin Connect. When set to True, P2G will attempt to capture the time spent in each Power Zone per the data returned by Peloton. See understanding P2G provided zones. DeviceInfoSettings no <code>null</code> See customizing the Garmin device associated with the workout. Cycling no <code>null</code> Configuration specific to Cycling workouts. Cycling.PreferredLapType no <code>Default</code> The preferred lap type to use. Running no <code>null</code> Configuration specific to Running workouts. Running.PreferredLapType no <code>Default</code> The preferred lap type to use. Rowing no <code>null</code> Configuration specific to Rowing workouts. Rowing.PreferredLapType no <code>Default</code> The preferred lap type to use. Strength no <code>null</code> Configuration specific to Strength workouts. Strength.DefaultSecondsPerRep no <code>3</code> For exercises that are done for time instead of reps, P2G can estimate how many reps you completed using this value. Ex. If <code>DefaultSecondsPerRep=3</code> and you do Curls for 15s, P2G will estimate you completed 5 reps. WorkoutTitleTemplate no <code>{{PelotonWorkoutTitle}} with {{PelotonInstructorName}}</code> Customize the workout title shown in Garmin Connect. Read More..."},{"location":"configuration/format/#understanding-p2g-provided-zones","title":"Understanding P2G Provided Zones","text":"<p>Danger</p> <p>If either custom zone setting is enable it is possible Garmin will not calculate Training Load, Effect, V02 Max, or related fields.  Use these settings with caution.</p> <p>Garmin Connect expects that users have a registered device and they expect users have set up their HR and Power Zones on that device. However, this presents a problem if you either:</p> <ul> <li>A) do not have a device capable of tracking Power</li> <li>B) do not have a Garmin device at all.</li> </ul> <p>The most common scenario for Peloton users is scenario <code>A</code>, where they do not own a Power capable Garmin device and therefore are not able to configure their Power Zones in Garmin Connect.  If you do not have Power or HR zones configured in Garmin Connect then you are not able to view accurate <code>Time In Zones</code> charts for a given workout.</p> <p>P2G provides a work around for this by optionally enriching the workout with the <code>Time In Zones</code> data with one caveat: the chart will not display the range value for the zone.</p> <p></p> <p>This is only available when generating and uploading the FIT format.</p>"},{"location":"configuration/format/#customizing-the-garmin-device-associated-with-the-workout","title":"Customizing the Garmin Device Associated with the workout","text":"<p>Workouts uploaded to Garmin Connect must report what device they were recorded on.  The device chosen impacts what additional data fields are calculated and shown by Garmin.</p> <p>For example, the device a workout is recorded on can impact:</p> <ol> <li>Whether or not the workout will count towards Challenges and Badges</li> <li>Whether or not Garmin will calculate things like TSS, TE, Load, and VO2 Max</li> </ol> <p>For this reason, P2G provides reasonable defaults to ensure users get the most data possible on their workouts out of the box.</p> <p>If you choose to customize what devices are used by P2G you can do that either via the ui or via config file.</p>"},{"location":"configuration/format/#p2g-default-devices","title":"P2G Default Devices","text":"Exercise Type Default Device Used Default Forerunner 945 Cycling Taxc Training App Windows Rowing Epix"},{"location":"configuration/format/#configuring-device-info-via-the-ui","title":"Configuring Device Info via the UI","text":"<p>Under <code>Settings &gt; Conversion &gt; Advanced &gt; Device Info Settings</code> you can see which devices will be used for each Exercise Type.  You can modify this list to suit your needs.</p> <p>The <code>None</code> Exercise Type serves as a global default used for any Exercise Type not configured.</p> <p>Learn more about finding Device Info to use.</p>"},{"location":"configuration/format/#configuring-device-info-via-config-file","title":"Configuring Device Info via Config File","text":"<p>This config section allows you to specificy a Device per Exercise Type.  The <code>None</code> Exercise Type serves as a global default used for any Exercise Type not configured.</p> <p>Learn more about finding Device Info to use.</p> <pre><code>\"DeviceInfoSettings\": {\n        \"none\": {\n          \"name\": \"Forerunner 945\",\n          \"unitId\": 1,\n          \"productID\": 3113,\n          \"manufacturerId\": 1,\n          \"version\": {\n            \"versionMajor\": 19,\n            \"versionMinor\": 2.0,\n            \"buildMajor\": 0,\n            \"buildMinor\": 0.0\n          }\n        },\n        \"cycling\": {\n          \"name\": \"TacxTrainingAppWin\",\n          \"unitId\": 1,\n          \"productID\": 20533,\n          \"manufacturerId\": 89,\n          \"version\": {\n            \"versionMajor\": 1,\n            \"versionMinor\": 30.0,\n            \"buildMajor\": 0,\n            \"buildMinor\": 0.0\n          }\n        },\n        \"rowing\": {\n          \"name\": \"Epix\",\n          \"unitId\": 3413684246,\n          \"productID\": 3943,\n          \"manufacturerId\": 1,\n          \"version\": {\n            \"versionMajor\": 10,\n            \"versionMinor\": 43.0,\n            \"buildMajor\": 0,\n            \"buildMinor\": 0.0\n          }\n        }\n      }\n</code></pre>"},{"location":"configuration/format/#discovering-garmin-devices","title":"Discovering Garmin Devices","text":"<p>You can find the Device Information for any previous workouts you have uploaded by following the below steps:</p> <ol> <li>Get your Garmin current device info<ol> <li>Log on to Garmin connect and find an activity you recorded with your device</li> <li>In the upper right hand corner of the activity, click the gear icon and choose <code>Export to TCX</code></li> <li>A TCX file will be downloaded to your computer</li> </ol> </li> <li>Find the TCX file you downloaded in part 1 and open it in any text editor.<ol> <li>Use <code>ctrl-f</code> (<code>cmd-f</code> on mac) to find the <code>&lt;Creator</code> section in the file, it will look similar to the sample device info below.</li> </ol> </li> <li>Use the values found in this section to Configure your custom device in P2G either via config file or the ui</li> </ol> <pre><code>&lt;Creator&gt;\n  &lt;Name&gt;Garmin Sample Device - please create from exported TCX file&lt;/Name&gt;\n  &lt;UnitId&gt;00000000000&lt;/UnitId&gt;\n  &lt;ProductID&gt;0000&lt;/ProductID&gt;\n  &lt;Version&gt;\n    &lt;VersionMajor&gt;0&lt;/VersionMajor&gt;\n    &lt;VersionMinor&gt;0&lt;/VersionMinor&gt;\n    &lt;BuildMajor&gt;0&lt;/BuildMajor&gt;\n    &lt;BuildMinor&gt;0&lt;/BuildMinor&gt;\n  &lt;/Version&gt;\n&lt;/Creator&gt;\n</code></pre>"},{"location":"configuration/format/#lap-types","title":"Lap Types","text":"<p>P2G supports several different strategies for creating Laps in Garmin Connect.  If a certain strategy is not available P2G will attempt to fallback to a different strategy.  You can override this behavior by specifying your preferred Lap type in the config. When <code>PreferredLapType</code> is set, P2G will first attempt to generate your preferred type and then fall back to the default behavior if it is unable to.  By default P2G will:</p> <ol> <li>First try to create laps based on <code>Class_Targets</code></li> <li>Then try to create laps based on <code>Class_Segments</code></li> <li>Finally fallback to create laps based on <code>Distance</code></li> </ol> Strategy Config Value Description Class Targets <code>Class_Targets</code> If the Peloton data includes Target Cadence information, then laps will be created to match any time the Target Cadence changed.  You must use this strategy if you want the Target Cadence to show up in Garmin on the Cadence chart. Class Segments <code>Class_Segments</code> If the Peloton data includes Class Segment information, then laps will be created to match each segment: Warm Up, Cycling, Weights, Cool Down, etc. Distance <code>Distance</code> P2G will caclulate Laps based on distance for each 1mi, 1km, or 500m (for Row only) based on your distance setting in Peloton."},{"location":"configuration/format/#workout-title-templating","title":"Workout Title Templating","text":"<p>P2G allows some limited customization of the title that will be used on the workout imported to Garmin.</p> <p>By default the title is structured like:</p> <pre><code>10min HITT Ride with Ally Love\n</code></pre>"},{"location":"configuration/format/#customizing-the-title","title":"Customizing the Title","text":"<p>Title customization is provided via \"templating\", which allows you to provide a template that P2G should follow when constructing a workout title.  The specific templating syntax P2G supports is Handlebars.</p> <p>The below data fields are available for use in the template:</p> <ul> <li><code>PelotonWorkoutTitle</code> - Peloton provides this usually in the form of \"10 min HITT Ride\"</li> <li><code>PelotonInstructorName</code> - Peloton provides this as the full instructors name: \"Ally Love\"</li> </ul> <p>These can be used to build a template like so:</p> <pre><code>{{PelotonWorkoutTitle}}{{#if PelotonInstructorName}} with {{PelotonInstructorName}}{{/if}}\n</code></pre> <p>The above template will always start with the Peloton workout title.  IF the workout has Instructor information, then the template will add <code>with Instructor</code> after the workout title.</p> <p>Some characters are not allowed to be used in the workout titles. If you use an unsupported character then it will automatically be replaced with a dash (<code>-</code>).</p> <p>Additionally, Garmin has a limit on how long a title will be. If the title exceeds this limit (~45 characters) then the title will be truncated.</p> <p>Note:</p> <p>For this setting to take effect, your Garmin Connect account must be set to allow custom workout names.  In the Garmin Connect web interface click on the user icon in the top right, select <code>Account Settings</code> then <code>Display Preferences</code> (shortcut). Change the <code>Activity Name</code> setting to <code>Workout Name (when available)</code>.  This will allow the custom workout name to sync, and should still allow the standard behavior when syncing non-P2G activities directly.</p>"},{"location":"configuration/garmin/","title":"Garmin Settngs","text":"<p>This Garmin Settings provide settings related to uploading workouts to Garmin.</p>"},{"location":"configuration/garmin/#settings-location","title":"Settings location","text":"Run Method Location Web UI UI &gt; Settings &gt; Garmin Tab Windows Exe UI &gt; Settings &gt; Garmin Tab GitHubAction Config Section in Workflow Headless (Docker or Console) Config section in <code>configuration.local.json</code>"},{"location":"configuration/garmin/#file-configuration","title":"File Configuration","text":"<pre><code>\"Garmin\": {\n    \"Email\": \"garmin@gmail.com\",\n    \"Password\": \"garmin\",\n    \"TwoStepVerificationEnabled\": false,\n    \"Upload\": false,\n    \"FormatToUpload\": \"fit\",\n    \"api\": {\n      \"ssoSignInUrl\": \"https://sso.garmin.com/sso/signin\",\n      \"ssoEmbedUrl\": \"https://sso.garmin.com/sso/embed\",\n      \"ssoMfaCodeUrl\": \"https://sso.garmin.com/sso/verifyMFA/loginEnterMfaCode\",\n      \"ssoUserAgent\": \"GCM-iOS-5.7.2.1\",\n      \"oAuth1TokenUrl\": \"https://connectapi.garmin.com/oauth-service/oauth/preauthorized\",\n      \"oAuth1LoginUrlParam\": \"https://sso.garmin.com/sso/embed&amp;accepts-mfa-tokens=true\",\n      \"oAuth2RequestUrl\": \"https://connectapi.garmin.com/oauth-service/oauth/exchange/user/2.0\",\n      \"uploadActivityUrl\": \"https://connectapi.garmin.com/upload-service/upload\",\n      \"uploadActivityUserAgent\": \"GCM-iOS-5.7.2.1\",\n      \"uplaodActivityNkHeader\": \"NT\",\n      \"origin\": \"https://sso.garmin.com\",\n      \"referer\": \"https://sso.garmin.com/sso/signin\"\n    }\n  }\n</code></pre> <p>Warning</p> <p>Console or Docker Headless: Your username and password for Peloton and Garmin Connect are stored in clear text, which is not secure. Please be aware of the risks.</p> <p>WebUI version 3.3.0+: Credentials are stored encrypted.</p> <p>Windows Exe version 4.0.0+: Credentials are stored encrypted.</p> <p>GitHub Actions: Credentials are stored encrypted.</p>"},{"location":"configuration/garmin/#settings-overview","title":"Settings Overview","text":"Field Required Default UI Setting Location Description Email yes - if Upload=true <code>null</code> <code>Garmin Tab</code> Your Garmin email used to sign in. Password yes - if Upload=true <code>null</code> <code>Garmin Tab</code> Your Garmin password used to sign in. Note: Does not support <code>\\</code> character in password TwoStepVerificationEnabled no <code>false</code> <code>Garmin Tab</code> Whether or not your Garmin account is protected by Two Step Verification Upload no <code>false</code> <code>Garmin Tab</code> <code>true</code> indicates you wish downloaded Peloton workouts to be uploaded to Garmin Connect. FormatToUpload no <code>fit</code> <code>Garmin Tab &gt; Advanced</code> Valid values are <code>fit</code> or <code>tcx</code>. Ensure the format you specify here is also enabled in your Format config Api no See sample above <code>Garmin Tab &gt; Advanced &gt; Garmin Api Settings</code> Configures how P2G communicates with the Garmin Api. Do not modify unless told to do so"},{"location":"configuration/observability/","title":"Observability File Configuration","text":"<p>Tip</p> <p>These are advanced settings for those who like to play around with Logs, Metrics, and Traces.</p>"},{"location":"configuration/observability/#overview","title":"Overview","text":"<p>P2G supports publishing Open Telemetry metrics. P2G publishes the following:</p> <ol> <li>Logs via Serilog. Logs can be sunk to a variety of sources including Console, File, ElasticSearch, and Grafana Loki.</li> <li>Metrics via Prometheus. Metrics are exposed on a standard <code>/metrics</code> endpoint and the port is configurable.</li> <li>Traces via Jaeger. Traces can be collected via an agent of your choice. Some options include Jaeger Agent/Jaeger Query, or Grafana Tempo.</li> <li>P2G also provides a sample Grafana dashboard which can be found in the repository.</li> </ol> <p>The grafana dashboard assumes you have the following datasources setup but can be easily modified to meet your needs:</p> <ol> <li>Prometheus</li> <li>Loki</li> <li>If running as a docker image a docker metrics exporter</li> </ol> <p></p>"},{"location":"configuration/observability/#observability-config","title":"Observability Config","text":"<p>P2G looks for a file named <code>configuration.local.json</code> in the same directory where it is run.  Within this file, P2G supports configuring an <code>Observability</code> section, as seen below.</p> <pre><code>\"Observability\": {\n\n    \"Prometheus\": { /**(1)!**/ }, // Metrics\n    \"Jaeger\": { /**(2)!**/ }, // Traces\n    \"Serilog\": { /**(3)!**/ } // Logs\n  }\n</code></pre> <ol> <li>Jump to Prometheus Config Documentation</li> <li>Jump to Jaeger Config Documentation</li> <li>Jump to Serilog Config Documentation</li> </ol>"},{"location":"configuration/observability/#prometheus-config","title":"Prometheus Config","text":"<pre><code>\"Prometheus\": {\n      \"Enabled\": false,\n      \"Port\": 4000\n    }\n</code></pre> Field Required Default Description Enabled no <code>false</code> Whether or not to expose metrics. Metrics will be available at <code>http://localhost:{port}/metrics</code> Port no <code>80</code> The port the metrics endpoint should be served on. Only valid for Console mode, not Api/WebUI <p>Tip</p> <p>If you are using Docker, ensure you have exposed the port from your container.</p>"},{"location":"configuration/observability/#example-prometheus-scraper-config","title":"Example Prometheus scraper config","text":"<pre><code>- job_name: 'p2g'\n    scrape_interval: 60s\n    static_configs:\n      - targets: [&lt;p2gIPaddress&gt;:&lt;p2gPort&gt;]\n    tls_config:\n      insecure_skip_verify: true\n</code></pre>"},{"location":"configuration/observability/#jaeger-config","title":"Jaeger Config","text":"<pre><code>\"Jaeger\": {\n      \"Enabled\": false,\n      \"AgentHost\": \"localhost\",\n      \"AgentPort\": 6831\n    }\n</code></pre> Field Required Default Description Enabled no <code>false</code> Whether or not to generate traces. AgentHost yes - if Enalbed=true <code>null</code> The host address for your trace collector. AgentPort yes - if Enabled=true <code>null</code> The port for your trace collector."},{"location":"configuration/observability/#serilog-config","title":"Serilog Config","text":"<pre><code>\"Serilog\": {\n      \"Using\": [ \"Serilog.Sinks.Console\", \"Serilog.Sinks.File\", \"Serilog.Sinks.Grafana.Loki\" ],\n      \"MinimumLevel\": {\n        \"Default\": \"Information\",\n        \"Override\": {\n          \"Microsoft\": \"Error\",\n          \"System\": \"Error\"\n        }\n      },\n      \"WriteTo\": [\n        { \"Name\": \"Console\" },\n        {\n          \"Name\": \"File\",\n          \"Args\": {\n            \"path\": \"./output/log.txt\",\n            \"rollingInterval\": \"Day\",\n            \"retainedFileCountLimit\": 7\n          }\n        },\n        {\n          \"Name\": \"GrafanaLoki\",\n          \"Args\": {\n            \"uri\": \"http://192.168.1.95:3100\",\n            \"textFormatter\": \"Serilog.Sinks.Grafana.Loki.LokiJsonTextFormatter, Serilog.Sinks.Grafana.Loki\",\n            \"labels\": [\n              {\n                \"key\": \"app\",\n                \"value\": \"p2g\"\n              }\n            ]\n          }\n        }]\n}\n</code></pre> Field Required Default Description Using no <code>null</code> A list of sinks you would like use. The valid sinks are listed in the examplea above. MinimumLevel no <code>null</code> The minimum level to write. <code>[Verbose, Debug, Information, Warning, Error, Fatal]</code> WriteTo no <code>null</code> Additional config for various sinks you are writing to. <p>More detailed information about configuring Logging can be found on the Serilog Config Repo.</p>"},{"location":"configuration/peloton/","title":"Peloton Settings","text":"<p>The Peloton Settings provide settings related to how P2G should fetch workouts from Peloton.</p>"},{"location":"configuration/peloton/#settings-location","title":"Settings location","text":"Run Method Location Web UI UI &gt; Settings &gt; Peloton Tab Windows Exe UI &gt; Settings &gt; Peloton Tab GitHubAction Config Section in Workflow Headless (Docker or Console) Config section in <code>configuration.local.json</code>"},{"location":"configuration/peloton/#file-configuration","title":"File Configuration","text":"<pre><code>\"Peloton\": {\n    \"Email\": \"peloton@gmail.com\",\n    \"Password\": \"peloton\",\n    \"NumWorkoutsToDownload\": 1,\n    \"ExcludeWorkoutTypes\": [ \"meditation\" ]\n  }\n</code></pre> <p>Warning</p> <p>Console or Docker Headless: Your username and password for Peloton and Garmin Connect are stored in clear text, which is not secure. Please be aware of the risks.</p> <p>WebUI version 3.3.0+: Credentials are stored encrypted.</p> <p>Windows Exe version 4.0.0+: Credentials are stored encrypted.</p> <p>GitHub Actions: Credentials are stored encrypted.</p>"},{"location":"configuration/peloton/#settings-overview","title":"Settings Overview","text":"Field Required Default Description Email yes <code>null</code> Your Peloton email used to sign in Password yes <code>null</code> Your Peloton password used to sign in. Note: Does not support <code>\\</code> character in password NumWorkoutsToDownload no 5 The default number of workouts to download. See choosing number of workouts to download.  Set this to <code>0</code> if you would like P2G to prompt you each time for a number to download. ExcludeWorkoutTypes no none An array of workout types that you do not want P2G to download/convert/upload. Read more..."},{"location":"configuration/peloton/#choosing-number-of-workouts-to-download","title":"Choosing Number of Workouts To Download","text":"<p>When choosing the number of workouts P2G should download each polling cycle its important to keep your configured Polling Interval in mind. If, for example, your polling interval is set to hourly, then you may want to set <code>NumWorkoutsToDownload</code> to 4 or greater. This ensures if you did four 15min workouts during that hour they would all be captured.</p> <p>Garmin is capable of rejecting duplicate workouts, so it is safe for P2G to attempt to sync a workout that may have been previously synced.</p>"},{"location":"configuration/peloton/#exclude-workout-types","title":"Exclude Workout Types","text":"<p>If there are Exercise Types that you do not want P2G to sync, then you can specify those in the settings.</p> <p>Some example use cases include:</p> <ol> <li>You take a wide variety of Peloton classes, including meditation and you want to skip uploading meditation classes.</li> <li>You want to avoid double-counting activities you already track directly on a Garmin device, such as outdoor running workouts.</li> </ol> <p>The list of valid values are any Exercise Type.</p>"},{"location":"configuration/webui/","title":"Web UI File Configuration","text":"<p>Tip</p> <p>These settings only apply if you are running an Instance of the Web UI.  P2G provides some recommended config files to get you started.</p> <p>Some lower level configuration cannot be provided via the web user interface and can only be provided by config file.</p> <p>The Web UI looks for a file named <code>configuration.local.json</code> in the same directory where it is run.  Below is an example of the structure of this config file.</p> <pre><code>{\n  \"Api\": { /** (1)! **/ }, \n  \"WebUI\": { /** (2)! **/ },\n  \"Observability\": { /** (3)! **/ }\n}\n</code></pre> <ol> <li>Jump to Api Config Documentation</li> <li>Jump to Web UI Config Documentation</li> <li>Go to Observability Config Documentation</li> </ol>"},{"location":"configuration/webui/#api-config","title":"Api Config","text":"<p>This section helps inform the Web UI where to find the P2G Api.</p> <pre><code> \"Api\": {\n      \"HostUrl\": \"http://p2g-api:8080\"\n    }\n</code></pre> Field Required Default UI Setting Location Description HostUrl yes <code>null</code> none The host and port for the Web UI to communicate with the Api."},{"location":"configuration/webui/#web-ui-config","title":"Web UI Config","text":"<p>Warning</p> <p>Optional - most users should not need to change this setting.</p> <pre><code> \"WebUI\": {\n      \"HostUrl\": \"http://*:8080\"\n    }\n</code></pre> Field Required Default UI Setting Location Description HostUrl no <code>http://localhost:8080</code> none The host and port the WebUI should bind to and listen on."},{"location":"install/","title":"Install","text":"<p>P2G can be run on all major operating systems.</p> Operating System Support Garmin 2-Step Verification Windows yes Mac yes Linux yes I don't want to install anything no"},{"location":"install/#windows-quick-start","title":"Windows Quick Start","text":"<ol> <li>Windows Executable - recommended unless you are comfortable with Docker on Windows</li> <li>Docker</li> <li>Build from Source</li> </ol>"},{"location":"install/#mac-quick-start","title":"Mac Quick Start","text":"<ol> <li>Docker</li> <li>Build from Source</li> </ol>"},{"location":"install/#linux-quick-start","title":"Linux Quick Start","text":"<ol> <li>Docker - recommended</li> <li>Build from Source</li> </ol>"},{"location":"install/#github-actions","title":"GitHub Actions","text":"<p>If you would rather not install anything on your computer, you can run P2G using a feature called <code>GitHub Actions</code>, this will require you to create an account on <code>GitHub</code>.  Additionally, your Garmin account must not have Two Step Verification enabled.</p> <ol> <li>GitHub Actions</li> </ol>"},{"location":"install/docker-headless/","title":"Docker Headless","text":"<p>This flavor of P2G runs without any user interface and relies on configuration from <code>configuration.local.json</code> file.</p> <p>DockerHub</p> <pre><code>docker run -i -v /full/path/to/configuration.local.json:/app/configuration.local.json -v /full/path/to/output:/app/output philosowaffle/peloton-to-garmin:stable\n</code></pre> <p>GitHub Package</p> <pre><code>docker run -i -v /full/path/to/configuration.local.json:/app/configuration.local.json -v /full/path/to/output:/app/output ghcr.io/philosowaffle/peloton-to-garmin:stable\n</code></pre>"},{"location":"install/docker-headless/#docker-compose","title":"docker-compose","text":"<p>Pre-requisite: You have either <code>docker-compose</code> or <code>Docker Desktop</code> installed This method does not work with Garmin accounts protected by Two Step Verification</p> <ol> <li>Create a directory <code>p2g-headless</code><ol> <li>Inside this folder create a docker-compose.yaml file in the directory</li> <li>Also create a configuration.local.json file in the directory.</li> <li>Edit the configuration file to use your Peloton and Garmin credentials</li> </ol> </li> <li>Open a terminal in this folder</li> <li>Run: <code>docker-compose pull &amp;&amp; docker-compose up -d</code></li> </ol> <p>Any logs or generated files will be available in the <code>output</code> directory.  Additionally, you can learn more about customizing your configuration over in the Configuration Section</p>"},{"location":"install/docker-headless/#to-stop-p2g","title":"To stop P2G","text":"<ol> <li>You can use Docker Desktop application to kill the containers</li> <li>Or, you can open a terminal in the <code>p2g-headless</code> folder<ol> <li>Run: <code>docker-compose down</code></li> </ol> </li> </ol>"},{"location":"install/docker-headless/#to-update-p2g","title":"To update P2G","text":"<ol> <li>Open a terminal in the <code>p2g-headless</code> folder<ol> <li>Run: <code>docker-compose pull &amp;&amp; docker-compose up -d</code></li> </ol> </li> </ol>"},{"location":"install/docker-headless/#prometheus","title":"Prometheus","text":"<p>If you configure P2G to serve Prometheus metrics then you will also need to map the corresponding port for your docker container. By default, Prometheus metrics will be served on port <code>4000</code>. You can learn more about P2G and Prometheus in the Observability Configuration section.</p>"},{"location":"install/docker-webui/","title":"Docker - Web UI","text":"<p>P2G provides a website user interface. Some key features include:</p> <ol> <li>Configure your settings via a user interface</li> <li>Trigger a sync from any browser (your computer, your phone, etc.)</li> <li>Sync service can still run in the background, syncing periodically</li> <li>OpenApi for custom scripts and workflows</li> </ol> <p></p>"},{"location":"install/docker-webui/#docker-compose","title":"docker-compose","text":"<p>Pre-requisite: You have either <code>docker-compose</code> or <code>Docker Desktop</code> installed</p> <ol> <li>Create a folder named <code>p2g-webui</code><ol> <li>Inside this folder create docker-compose.yaml</li> <li>Also create api.local.json</li> <li>Also create webui.local.json</li> </ol> </li> <li>Open a terminal in this folder</li> <li>Run: <code>docker-compose pull &amp;&amp; docker-compose up -d</code><ol> <li>This will pull the containers and start them up running in the background</li> <li>You can close the terminal at this time</li> </ol> </li> <li>Open a browser and navigate to <code>http://localhost:8002</code></li> </ol> <p>Any logs or generated files will be available in the <code>output</code> directory.  Additionally, you can learn more about customizing your configuration over in the Configuration Section</p>"},{"location":"install/docker-webui/#to-stop-p2g","title":"To stop P2G","text":"<ol> <li>You can use Docker Desktop application to kill the containers</li> <li>Or, you can open a terminal in the <code>p2g-webui</code> folder<ol> <li>Run: <code>docker-compose down</code></li> </ol> </li> </ol>"},{"location":"install/docker-webui/#to-update-p2g","title":"To update P2G","text":"<ol> <li>Open a terminal in the <code>p2g-webui</code> folder<ol> <li>Run: <code>docker-compose pull &amp;&amp; docker-compose up -d</code></li> </ol> </li> </ol>"},{"location":"install/docker-webui/#configuration","title":"Configuration","text":"<p>If you are migrating to the Web UI for the first time you will need to reconfigure most of your settings using the user interface.  The only settings that are carried over and still configured via the configuration file are the ones related to <code>Observability</code>.</p>"},{"location":"install/docker-webui/#open-api","title":"Open Api","text":"<p>To access the Open API spec  for P2G you will need to expose the below port on the Api docker container.  The open API spec will be available at <code>http://localhost:8001/swagger</code>.</p> <pre><code>version: \"3.9\"\n\nservices:\n  p2g-api:\n    container_name: p2g-api\n    image: philosowaffle/peloton-to-garmin:api-stable\n    environment:\n      - TZ=America/Chicago\n    ports:\n      - 8001:8080 # to access the api or swagger docs\n    volumes:\n      - ./api.local.json:/app/configuration.local.json\n      - ./data:/app/data\n      - ./output:/app/output\n\n  p2g-webui:\n    container_name: p2g-webui\n    image: philosowaffle/peloton-to-garmin:webui-stable\n    ports:\n      - 8002:8080\n    environment:\n      - TZ=America/Chicago\n    volumes:\n      - ./webui.local.json:/app/configuration.local.json\n    depends_on:\n      - p2g-api\n</code></pre>"},{"location":"install/docker/","title":"Docker","text":"<p>The recommended installation method is with Docker. If you're not familiar with Docker you can learn more here.</p> <p>P2G offers two main flavors of docker images:</p> Flavor Support Garmin 2-Step Verification Support Automatic Syncing Web UI yes only when Garmin 2fa is disabled Docker Headless partial only when Garmin 2fa is disabled <p>Image Repositories</p> <p>P2G publishes Docker images to both DockerHub and GitHub Package.</p>"},{"location":"install/docker/#tags","title":"Tags","text":"<p>P2G ships several different flavors of containers that can be combined with a version tag:</p>"},{"location":"install/docker/#image-flavors","title":"Image flavors","text":"<ol> <li><code>console</code>- The headless version of P2G, simple console application</li> <li><code>api</code> - Used in conjunction with the <code>webui</code> image, provides the API and server for P2G user interface</li> <li><code>webui</code> - Used in conjunction with the <code>api</code> image, provides a P2G web user interface</li> </ol>"},{"location":"install/docker/#version-tags","title":"Version tags","text":"<ol> <li><code>stable</code> - Always points to the latest release</li> <li><code>v{X}</code> / <code>v3</code> / <code>v4</code> - Always points to the latest of the current major version</li> <li><code>latest</code> - The bleeding edge of the master branch, breaking changes may happen</li> <li><code>vX.Y.Z</code> - For using a specific released version</li> </ol>"},{"location":"install/docker/#using-flavor-and-version-tag","title":"Using Flavor and Version Tag","text":"<p>In the below examples, you can substitute <code>console</code> for any Image Flavor.</p> <ol> <li><code>console-latest</code></li> <li><code>console-stable</code></li> <li><code>console-v4</code></li> <li><code>console-v3.6.0</code></li> </ol>"},{"location":"install/docker/#docker-user","title":"Docker User","text":"<p>The P2G images run the process under the user and group <code>p2g:p2g</code> with uid and gid <code>1015:1015</code>.  To access files created by <code>p2g</code>:</p> <ol> <li>Create a group on the local machine <code>p2g</code> with group id <code>1015</code></li> <li>Add your user on the local machine to the <code>p2g</code> group</li> </ol>"},{"location":"install/docker/#more-about-docker","title":"More about Docker","text":"<p>Docker provides an easy and consistent way to install, update, and uninstall applications across multiple Operating Systems.  Docker is extremely popular in the self-hosted community, a group interested in minimizing dependencies on Cloud providers in favor of attempting to keep their data local, private, and free.  You can learn more about the ever growing list of self-hosted applications on the awesome-selfhosted list.</p> <p>To learn more about Docker head on over to their website.</p>"},{"location":"install/docker/#mac-windows-docker-quick-start","title":"Mac / Windows Docker Quick Start","text":"<ol> <li>Download and install Docker Desktop, this will give you all the tools you need and a handy UI for managing docker containers<ol> <li>Install Mac Docker Desktop</li> <li>Install Windows Docker Desktop</li> </ol> </li> <li>Follow the remaining instructions here</li> </ol>"},{"location":"install/github-action/","title":"Github Actions","text":"<p>A Github Actions workflow exists that can be used to automatically sync your rides on a schedule (by default once a day). </p> <p>Warning</p> <p>This option does not support Garmin accounts protected by Two Step Verification.</p>"},{"location":"install/github-action/#getting-started","title":"Getting started","text":"<p>The easiest way to use the action is to simply create a fork of the repo using the <code>Fork</code> button.</p> <ol> <li>Create an account on GitHub</li> <li>Navigate to the P2G repo</li> <li>In the upper right hand corner, click the button that says <code>Fork</code></li> <li>Make note of the url to your forked copy</li> <li>Continue on to the Secrets instructions below</li> </ol>"},{"location":"install/github-action/#secrets","title":"Secrets","text":"<p>Once you've created your fork, you'll need to set a number of secrets in your repository.</p> <ol> <li>From your forked copy of P2G, click the <code>Settings</code></li> <li>Then, on the side nav, select <code>Secrets</code> and then <code>Actions</code>.</li> <li>Continue on to the Action Permissions instructions below</li> </ol> <p>From this point on you can add secrets by clicking the <code>New repository secret</code> button at the top right.</p> Secret Name Value <code>P2G_PELOTON__EMAIL</code> The email address you use to login to Peloton <code>P2G_PELOTON__PASSWORD</code> The password that you use to login to Peloton <code>P2G_GARMIN__EMAIL</code> The email address that you use to login to Garmin <code>P2G_GARMIN__PASSWORD</code> The password that you use to log into Garmin <code>DEVICE_INFO</code> The contents of the deviceInfo.xml that you want to use for the sync"},{"location":"install/github-action/#action-permissions","title":"Action Permissions","text":"<ol> <li>From your forked copy of P2G, click the <code>Settings</code> tab</li> <li>Navigate to the settings for <code>Actions &gt; General</code></li> <li>Under <code>Action Permissions</code> choose the 4th radio button titled: \"Allow , and select non-, actions and reusable workflows\". <li>Under the same radio button, check the checkbox to \"Allow actions created by GitHub\"</li>"},{"location":"install/github-action/#starting-the-workflow","title":"Starting the workflow","text":"<p>Once you've configured your secrets, you can then navigate to the <code>Actions</code> tab within your repository.</p> <ol> <li>Enable actions for your fork.</li> <li>You can now run the <code>Sync workflow</code> manually</li> </ol> <p>To have tha action run on a schedule set the <code>cron</code> line in the <code>./github/workflows/sync_peloton_to_garmin.yml</code> file.</p>"},{"location":"install/github-action/#configuration","title":"Configuration","text":"<p>If you're doing more than 5 activities a day, you will need to change the default number of workouts downloaded as part of the workflow. This is configured in the <code>./github/workflows/sync_peloton_to_garmin.yml</code> file.</p>"},{"location":"install/github-action/#updating","title":"Updating","text":"<ol> <li>Make note of your current configuration in <code>.github/workflows/sync_peloton_to_garmin.yml</code> as you may need to reapply these changes after updating.</li> <li>From the home page of your forked repository, there should be a button to <code>Sync fork</code>, click this to pull in the latest changes from the original repo.</li> <li>Go back to your <code>.github/workflows/sync_peloton_to_garmin.yml</code> and re-apply any changes from step 1.</li> </ol>"},{"location":"install/source/","title":"Build from Source","text":"<p>To compile and run P2G on your machine, follow the below steps.</p>"},{"location":"install/source/#setup","title":"Setup","text":"<ol> <li>Install the latest dotnet 7.0 SDK</li> <li>Clone the GitHub repository locally</li> <li>In the local repo, find the file named <code>configuration.example.json</code>. Make a copy of it and name it <code>configuration.local.json</code>.</li> <li>Open a terminal and run the below one-time setup steps:</li> </ol> <pre><code>&gt; cd peloton-to-garmin\n&gt; dotnet restore\n&gt; dotnet build\n</code></pre>"},{"location":"install/source/#to-run-p2g","title":"To run P2G","text":""},{"location":"install/source/#console","title":"Console","text":"<ol> <li>Move <code>configuration.local.json</code> into the <code>src/ConsoleClient</code> directory</li> <li>Open <code>configuration.local.json</code> in a text editor of your choice and edit it to use your Peloton and Garmin credentials</li> </ol> <pre><code>&gt; dotnet run --project ./src/ConsoleClient/ConsoleClient.csproj\n</code></pre>"},{"location":"install/source/#windows-ui","title":"Windows UI","text":"<pre><code>&gt; dotnet run --project ./src/ClientUI/ClientUI.csproj\n</code></pre>"},{"location":"install/source/#web-ui","title":"Web UI","text":"<pre><code>&gt; dotnet run --project ./src/WebUI/WebUI.csproj\n&gt; dotnet run --project ./src/Api/Api.csproj\n</code></pre>"},{"location":"install/source/#updating","title":"Updating","text":"<pre><code>&gt; git fetch\n&gt; git pull\n&gt; cd peloton-to-garmin\n&gt; dotnet restore\n&gt; dotnet build\n</code></pre>"},{"location":"install/windows/","title":"Windows","text":"<p>With P2G v4, there is now a Windows GUI application available for download. P2G does not install anything to your computer, everything it needs to run is self-contained in the folder you downloaded.  This includes all of your settings and other configuration files.  For this reason,</p> <ol> <li>You can always download and run a newer version of P2G without any risk of breaking your existing version.</li> <li>P2G does not yet support multiple users, but you can have two instances of P2G on the same computer, each in a different folder, setup for a different user</li> <li>To uninstall P2G simply delete its folder</li> <li>You may wish to create a Desktop shortcut to the application for convenience</li> </ol> <p></p>"},{"location":"install/windows/#install","title":"Install","text":"<ol> <li>Download and unzip the latest stable release</li> <li>Find the <code>ClientUI.exe</code></li> <li>Double click to run it!</li> </ol> <p>You can learn more about customizing your configuration over in the Configuration Section.</p>"},{"location":"install/windows/#updating","title":"Updating","text":"<ol> <li>Download and unzip the latest stable release</li> <li>In the unzipped directory replace the <code>configuration.local.json</code> with your previous <code>configuration.local.json</code> file</li> <li>In the unzipped directory copy over the <code>data</code> folder from your previous P2G install folder, this will preserve your settings</li> <li>Find the <code>ClientUI.exe</code></li> <li>Double click to run it!</li> </ol>"},{"location":"install/windows/#rolling-back-to-a-previous-version","title":"Rolling back to a previous version","text":"<ol> <li>Find the release you want from the releases page</li> <li>Download and unzip the Windows exe from that relase (found in the <code>Assets</code> section)</li> <li>In the unzipped directory replace the <code>configuration.local.json</code> with your previous <code>configuration.local.json</code> file</li> <li>In the unzipped directory copy over th <code>data</code> folder from your previous P2G install folder, this will preserve your settings</li> <li>Find the <code>ClientUI.exe</code></li> <li>Double click to run it!</li> </ol> <p>Warning</p> <p>Attempting to use configuration or data from a later version of P2G with an older version is not guaranteed to work. You may need to reconfigure your instance.</p>"},{"location":"install/windows/#available-versions","title":"Available Versions","text":"<p>P2G provides two different versions of the executable you can choose between:</p> <ol> <li>The latest stable version</li> <li>The latest dev version<ol> <li>Click on the first item in the list with a green checkmark, this will be the latest successful build.</li> <li>On the summary page, at the bottom you will see a section called <code>Artifacts</code> with various builds attached. Click on one of these builds to download for your operating system.</li> </ol> </li> </ol>"},{"location":"install/windows/#limitations","title":"Limitations","text":"<ol> <li>Does not truly run in the background, the program must be minimized to the the task bar if using it to automatically sync, and you must manually restart it if your computer reboots</li> </ol>"},{"location":"migration/migrate-v1-v2/","title":"Migrating from V1 to V2","text":"<p>Version 2 of P2G is a complete rewrite of Version 1 into dotnet. Version 2 has feature parity with Version 1 and additional new features. One of the key benefits of Version 2 over Version 1 is the ability to generate and upload FIT files. FIT files are able to capture more data than the TCX format used in Version 1.</p> <p>Version 2 will not interfere with your Version 1 install, so if anything doesn't work for you on V2, you can always return to using V1.</p>"},{"location":"migration/migrate-v1-v2/#steps","title":"Steps","text":""},{"location":"migration/migrate-v1-v2/#1-backup-your-current-config","title":"1. Backup your current config","text":"<ol> <li>Navigate to where you currently have version 1 installed</li> <li>Rename the folder to something like <code>p2g_v1</code></li> </ol>"},{"location":"migration/migrate-v1-v2/#2-download-v2","title":"2. Download v2","text":"<ol> <li>Download and install v2, see Install</li> </ol>"},{"location":"migration/migrate-v1-v2/#3-migrate-your-config","title":"3. Migrate your config","text":"<ol> <li>Find your original v1 <code>config.ini</code> file and open it</li> <li>In a new window, find the v2 <code>configuration.local.json</code> file and open it</li> <li>Below walks through section by section how the old config maps to the new config values.</li> </ol>"},{"location":"migration/migrate-v1-v2/#peloton-section","title":"Peloton section","text":"<pre><code>[PELOTON]\nEmail = pelotonEmail@example.com\nPassword = pelotonPassword\nWorkoutTypes = cycling, strength \n</code></pre> Property New Config Notes Email Peloton Config.Email Password Peloton Config.Password WorkoutTypes Peloton Config.ExcludeWorkoutTypes In v1 this was a list of workout types to include, in v2 this changes to a list of workout types to exclude."},{"location":"migration/migrate-v1-v2/#garmin-section","title":"Garmin section","text":"<pre><code>[GARMIN]\nUploadEnabled = false\nEmail = garminEmail@example.com\nPassword = garminPassword\n</code></pre> Property New Config Notes Email Garmin Config.Email Password Garmin Config.Password UploadEnabled Garmin Config.Upload You will additionally need to specify <code>FormatToUpload</code> if you have this enabled."},{"location":"migration/migrate-v1-v2/#ptog-section","title":"PTOG Section","text":"<pre><code>[PTOG]\nEnablePolling = false\nPollingIntervalSeconds = 600\n</code></pre> Property New Config Notes EnablePolling App Config.EnablePolling PollingIntervalSeconds App Config.PollingIntervalSeconds"},{"location":"migration/migrate-v1-v2/#output-section","title":"Output Section","text":"<pre><code>[OUTPUT]\nDirectory = Output\nWorkingDirectory = Working\nArchiveDirectory = Archive\nRetainFiles = true\nArchiveFiles = true\nSkipDownload = true\nArchiveByType = true\n</code></pre> Property New Config Notes Directory none WorkingDirectory App Config.WorkingDirectory ArchiveDirectory App Config.OutputDirectory RetainFiles Format Config.SaveLocalCopy ArchiveFiles none SkipDownload none ArchiveByType Format Config.[Fit,Tcx,Json] Set the formats you want to save to true and then set <code>SaveLocalCopy: true</code>"},{"location":"migration/migrate-v1-v2/#logger-section","title":"Logger Section","text":"<pre><code>[LOGGER]\nLogFile = peloton-to-garmin.log\nLogLevel = INFO\n</code></pre> Property New Config Notes LogFile Observability Config.Serilog.WriteTo.Args.Path LogLevel Observability Config.Serilog.MinimumLevel <p>For the general use case, the below config should be sufficient.</p> <pre><code>\"Observability\": {\n\n    \"Serilog\": {\n      \"Using\": [ \"Serilog.Sinks.Console\", \"Serilog.Sinks.File\" ],\n      \"MinimumLevel\": \"Information\",\n      \"WriteTo\": [\n        { \"Name\": \"Console\" },\n        {\n          \"Name\": \"File\",\n          \"Args\": {\n            \"path\": \"./peloton-to-garmin.txt\",\n            \"rollingInterval\": \"Day\",\n            \"retainedFileCountLimit\": 7\n          }\n        }\n      ]\n    }\n  }\n</code></pre>"},{"location":"migration/migrate-v1-v2/#debug-section","title":"Debug Section","text":"<pre><code>[DEBUG]\nPauseOnFinish = true\n</code></pre> Property New Config Notes PauseOnFinish App Config.CloseWindowOnFinish"},{"location":"migration/migrate-v2-v3/","title":"Migrating from V2 to V3","text":"<p>Version 3 only includes one breaking change that some users will need to account for. Based on your install type you can find what changes need to be made below.</p>"},{"location":"migration/migrate-v2-v3/#windows-exe","title":"Windows Exe","text":"<p>No changes are needed.</p>"},{"location":"migration/migrate-v2-v3/#docker","title":"Docker","text":"<p>No changes are needed, though you may wish to switch over to the Web UI image tags.</p>"},{"location":"migration/migrate-v2-v3/#source","title":"Source","text":"<ol> <li>Install the latest dotnet 6.0 SDK</li> </ol>"},{"location":"migration/migrate-v3-v4/","title":"Migrating from V3 to V4","text":"<p>Version 3 only includes one breaking change that some users will need to account for. Based on your install type you can find what changes need to be made below.</p>"},{"location":"migration/migrate-v3-v4/#windows-exe","title":"Windows Exe","text":"<p>The P2G windows exe now provides a proper user interface. You can migrate to this new version simply by following the install steps.  You will need to re-configure P2G using the user interface as your settings will not migrate over.</p> <p>There is no risk installing v4 and trying it out. Your previous install will continue to work while you test out v4.  When you're satisfied with v4 you can delete your previous version of P2G.</p>"},{"location":"migration/migrate-v3-v4/#github-action","title":"GitHub Action","text":"<p>Follow the updating instructions for GitHub Actions.  A couple notable changes that will be pulled in:</p> <ol> <li>Container Image tag has changed to <code>console-stable</code>, you may wish to edit this to be <code>console-v4</code></li> <li>The configuration options have changed slightly with some fields being deprecated and removed</li> <li>The command to run p2g has changed to <code>/app/ConsoleClient</code>.</li> </ol>"},{"location":"migration/migrate-v3-v4/#docker-headless","title":"Docker Headless","text":"<p>No specific migration steps are needed, however please take note of the breaking changes in case any of these impact your setup.</p>"},{"location":"migration/migrate-v3-v4/#docker-webui","title":"Docker WebUI","text":"<p>No specific migration steps are needed, however please take note of the breaking changes in case any of these impact your setup.</p>"},{"location":"migration/migrate-v3-v4/#docker-api","title":"Docker API","text":"<p>No specific migration steps are needed, however please take note of the breaking changes in case any of these impact your setup.</p>"},{"location":"migration/migrate-v3-v4/#source","title":"Source","text":"<ol> <li>Install the latest dotnet 7.0 SDK</li> </ol> <p>Please take note of the breaking changes in case any of these impact your setup.</p>"},{"location":"migration/migrations/","title":"Migrating from older P2G Versions","text":"<p>P2G uses major release versions to designate when a breaking or non-backwards compatible change has been made. For this reason, when moving between major versions there may be some one time steps that need to be followed.</p> <ol> <li>Migrating from V1 to V2</li> <li>Migrating from V2 to V3</li> <li>Migrating from V3 to V4</li> </ol>"}]}