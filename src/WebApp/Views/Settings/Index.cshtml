@model SettingsGetResponse
@{
    ViewData["Title"] = "Settings";
    ViewBag.Page = "settings";
}

<h1>@ViewData["Title"]</h1>
<br />

@using (Html.BeginForm())
{

    <p>
        <input type="submit" value="Save" />
    </p>

    <h3>App Config</h3>

    <table class="table">
        <tbody>
            <tr>                
                <td class="font-weight-bold editor-label">
                    @Html.LabelFor(model => model.Settings.App.OutputDirectory):
                    <small id="outputDirHelp" class="form-text text-muted">
                        Where downloaded and converted files should be saved to.
                    </small>
                </td>
                <td class="custom-file">
                    @Html.EditorFor(model => model.Settings.App.OutputDirectory)
                    @Html.ValidationMessageFor(model => model.Settings.App.OutputDirectory)
                </td>                
            </tr>
            <tr>
                <td class="font-weight-bold editor-label">
                    @Html.LabelFor(model => model.Settings.App.WorkingDirectory):
                    <small id="workingDirHelp" class="form-text text-muted">
                        The directory where P2G can work. When running, P2G will create and delete files and needs a dedicated directory to do that.
                    </small>
                </td>
                <td class="editor-field">
                    @Html.EditorFor(model => model.Settings.App.WorkingDirectory)
                    @Html.ValidationMessageFor(model => model.Settings.App.WorkingDirectory)
                </td> 
            </tr>
            <tr>
                <td class="font-weight-bold editor-label">@Html.LabelFor(model => model.Settings.App.EnablePolling):</td>
                <td class="editor-field">
                    @Html.EditorFor(model => model.Settings.App.EnablePolling)
                    @Html.ValidationMessageFor(model => model.Settings.App.EnablePolling)
                </td>
            </tr>
            <tr>
                <td class="font-weight-bold editor-label">@Html.LabelFor(model => model.Settings.App.PollingIntervalSeconds):</td>
                <td class="editor-field">
                    @Html.EditorFor(model => model.Settings.App.PollingIntervalSeconds)
                    @Html.ValidationMessageFor(model => model.Settings.App.PollingIntervalSeconds)
                </td>
            </tr>
        </tbody>
    </table>
    <br />

    <h3>Format Config</h3>
    <table class="table">
        <tbody>
            <tr>
                <td class="font-weight-bold editor-label">@Html.LabelFor(model => model.Settings.Format.Fit):</td>
                <td class="editor-field">
                    @Html.EditorFor(model => model.Settings.Format.Fit)
                    @Html.ValidationMessageFor(model => model.Settings.Format.Fit)
                </td>
            </tr>
            <tr>
                <td class="font-weight-bold editor-label">@Html.LabelFor(model => model.Settings.Format.Json):</td>
                <td class="editor-field">
                    @Html.EditorFor(model => model.Settings.Format.Json)
                    @Html.ValidationMessageFor(model => model.Settings.Format.Json)
                </td>
            </tr>
            <tr>
                <td class="font-weight-bold editor-label">@Html.LabelFor(model => model.Settings.Format.Tcx):</td>
                <td class="editor-field">
                    @Html.EditorFor(model => model.Settings.Format.Tcx)
                    @Html.ValidationMessageFor(model => model.Settings.Format.Tcx)
                </td>
            </tr>
            <tr>
                <td class="font-weight-bold editor-label">@Html.LabelFor(model => model.Settings.Format.SaveLocalCopy):</td>
                <td class="editor-field">
                    @Html.EditorFor(model => model.Settings.Format.SaveLocalCopy)
                    @Html.ValidationMessageFor(model => model.Settings.Format.SaveLocalCopy)
                </td>
            </tr>
            <tr>
                <td class="font-weight-bold editor-label">@Html.LabelFor(model => model.Settings.Format.IncludeTimeInHRZones):</td>
                <td class="editor-field">
                    @Html.EditorFor(model => model.Settings.Format.IncludeTimeInHRZones)
                    @Html.ValidationMessageFor(model => model.Settings.Format.IncludeTimeInHRZones)
                </td>
            </tr>
            <tr>
                <td class="font-weight-bold editor-label">@Html.LabelFor(model => model.Settings.Format.IncludeTimeInPowerZones):</td>
                <td class="editor-field">
                    @Html.EditorFor(model => model.Settings.Format.IncludeTimeInPowerZones)
                    @Html.ValidationMessageFor(model => model.Settings.Format.IncludeTimeInPowerZones)
                </td>
            </tr>
            <tr>
                <td class="font-weight-bold editor-label">@Html.LabelFor(model => model.Settings.Format.DeviceInfoPath):</td>
                <td class="editor-field">
                    @Html.EditorFor(model => model.Settings.Format.DeviceInfoPath)
                    @Html.ValidationMessageFor(model => model.Settings.Format.DeviceInfoPath)
                </td>
            </tr>
            <tr>
                <td class="font-weight-bold editor-label">Running @Html.LabelFor(model => model.Settings.Format.Running.PreferredLapType):</td>
                <td class="editor-field">
                    @Html.EditorFor(model => model.Settings.Format.Running.PreferredLapType)
                    @Html.ValidationMessageFor(model => model.Settings.Format.Running.PreferredLapType)
                </td>
            </tr>
            <tr>
                <td class="font-weight-bold editor-label">Cycling @Html.LabelFor(model => model.Settings.Format.Cycling.PreferredLapType):</td>
                <td class="editor-field">
                    @Html.EditorFor(model => model.Settings.Format.Cycling.PreferredLapType)
                    @Html.ValidationMessageFor(model => model.Settings.Format.Cycling.PreferredLapType)
                </td>
            </tr>
        </tbody>
    </table>
    <br />

    <h3>Peloton Config</h3>
    <table class="table">
        <tbody>
            <tr>
                <td class="font-weight-bold editor-label">@Html.LabelFor(model => model.Settings.Peloton.Email):</td>
                <td class="editor-field">
                    @Html.EditorFor(model => model.Settings.Peloton.Email)
                    @Html.ValidationMessageFor(model => model.Settings.Peloton.Email)
                </td>
            </tr>
            <tr>
                <td class="font-weight-bold editor-label">@Html.LabelFor(model => model.Settings.Peloton.Password):</td>
                <td class="editor-field">
                    @Html.EditorFor(model => model.Settings.Peloton.Password)
                    @Html.ValidationMessageFor(model => model.Settings.Peloton.Password)
                </td>
            </tr>
            <tr>
                <td class="font-weight-bold editor-label">@Html.LabelFor(model => model.Settings.Peloton.NumWorkoutsToDownload):</td>
                <td class="editor-field">
                    @Html.EditorFor(model => model.Settings.Peloton.NumWorkoutsToDownload)
                    @Html.ValidationMessageFor(model => model.Settings.Peloton.NumWorkoutsToDownload)
                </td>
            </tr>
            <tr>
                <td class="font-weight-bold editor-label">@Html.LabelFor(model => model.Settings.Peloton.ExcludeWorkoutTypes):</td>
                <td class="editor-field">
                    @Html.EditorFor(model => model.Settings.Peloton.ExcludeWorkoutTypes)
                    @Html.ValidationMessageFor(model => model.Settings.Peloton.ExcludeWorkoutTypes)
                </td>
            </tr>
        </tbody>
    </table>
    <br />

    <h3>Garmin Config</h3>
    <table class="table">
        <tbody>
            <tr>
                <td class="font-weight-bold editor-label">@Html.LabelFor(model => model.Settings.Garmin.Email):</td>
                <td class="editor-field">
                    @Html.EditorFor(model => model.Settings.Garmin.Email)
                    @Html.ValidationMessageFor(model => model.Settings.Garmin.Email)
                </td>
            </tr>
            <tr>
                <td class="font-weight-bold editor-label">@Html.LabelFor(model => model.Settings.Garmin.Password):</td>
                <td class="editor-field">
                    @Html.EditorFor(model => model.Settings.Garmin.Password)
                    @Html.ValidationMessageFor(model => model.Settings.Garmin.Password)
                </td>
            </tr>
            <tr>
                <td class="font-weight-bold editor-label">@Html.LabelFor(model => model.Settings.Garmin.Upload):</td>
                <td class="editor-field">
                    @Html.EditorFor(model => model.Settings.Garmin.Upload)
                    @Html.ValidationMessageFor(model => model.Settings.Garmin.Upload)
                </td>
            </tr>
            <tr>
                <td class="font-weight-bold editor-label">@Html.LabelFor(model => model.Settings.Garmin.FormatToUpload):</td>
                <td class="editor-field">
                    @Html.EditorFor(model => model.Settings.Garmin.FormatToUpload)
                    @Html.ValidationMessageFor(model => model.Settings.Garmin.FormatToUpload)
                </td>
            </tr>
            <tr>
                <td class="font-weight-bold editor-label">@Html.LabelFor(model => model.Settings.Garmin.UploadStrategy):</td>
                <td class="editor-field">
                    @Html.EditorFor(model => model.Settings.Garmin.UploadStrategy)
                    @Html.ValidationMessageFor(model => model.Settings.Garmin.UploadStrategy)
                </td>
            </tr>
        </tbody>
    </table>
    <br />

    <h3>Observability Config</h3>
    <table class="table">
        <tbody>
            <tr>
                <td class="font-weight-bold">Prometheus Enabled:</td>
                <td>@Model.App.Observability.Prometheus.Enabled</td>
            </tr>
            <tr>
                <td class="font-weight-bold">Prometheus Port:</td>
                <td>@Model.App.Observability.Prometheus.Port</td>
            </tr>
            <tr>
                <td class="font-weight-bold">Jaeger Enabled:</td>
                <td>@Model.App.Observability.Jaeger.Enabled</td>
            </tr>
            <tr>
                <td class="font-weight-bold">Jaeger Agent Host:</td>
                <td>@Model.App.Observability.Jaeger.AgentHost</td>
            </tr>
            <tr>
                <td class="font-weight-bold">Jaeger Agent Port:</td>
                <td>@Model.App.Observability.Jaeger.AgentPort</td>
            </tr>
        </tbody>
    </table>
    <br />   

    <p>
        <input type="submit" value="Save" />
    </p>

}

