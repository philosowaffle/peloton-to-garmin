import getClippingRect from"../dom-utils/getClippingRect.js";import getDocumentElement from"../dom-utils/getDocumentElement.js";import getBoundingClientRect from"../dom-utils/getBoundingClientRect.js";import computeOffsets from"./computeOffsets.js";import rectToClientRect from"./rectToClientRect.js";import{clippingParents,reference,popper,bottom,top,right,basePlacements,viewport}from"../enums.js";import{isElement}from"../dom-utils/instanceOf.js";import mergePaddingObject from"./mergePaddingObject.js";import expandToHashMap from"./expandToHashMap.js";export default function detectOverflow(e,t){var n,o=t=void 0===t?{}:t,p=o.placement,r=void 0===p?e.placement:p,i=o.boundary,m=void 0===i?clippingParents:i,s=o.rootBoundary,c=void 0===s?viewport:s,t=o.elementContext,p=void 0===t?popper:t,i=o.altBoundary,s=void 0!==i&&i,t=o.padding,i=void 0===t?0:t,o=mergePaddingObject("number"!=typeof i?i:expandToHashMap(i,basePlacements)),t=p===popper?reference:popper,i=e.rects.popper,t=e.elements[s?t:p],t=getClippingRect(isElement(t)?t:t.contextElement||getDocumentElement(e.elements.popper),m,c),m=getBoundingClientRect(e.elements.reference),c=computeOffsets({reference:m,element:i,strategy:"absolute",placement:r}),c=rectToClientRect(Object.assign({},i,c)),m=p===popper?c:m,l={top:t.top-m.top+o.top,bottom:m.bottom-t.bottom+o.bottom,left:t.left-m.left+o.left,right:m.right-t.right+o.right},e=e.modifiersData.offset;return p===popper&&e&&(n=e[r],Object.keys(l).forEach(function(e){var t=0<=[right,bottom].indexOf(e)?1:-1,o=0<=[top,bottom].indexOf(e)?"y":"x";l[e]+=n[o]*t})),l}