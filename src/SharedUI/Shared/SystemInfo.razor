@inherits TracingComponentBase
@inject IApiClient _apiClient

<div class="row">
    <div class="col-6">
        <HxListGroup Flush="true">
            <HxListGroupItem>
                <b>Version:</b>
                    @systemInfo.Version @if (systemInfo.NewerVersionAvailable.GetValueOrDefault())
                    {
                        <small>  (newer version available: @systemInfo.LatestVersionInformation?.LatestVersion) <HxBadge Type="BadgeType.RoundedPill" Color="ThemeColor.Success"><HxIcon Icon="BootstrapIcon.Check2"></HxIcon></HxBadge></small>
                    }
            </HxListGroupItem>
            <HxListGroupItem><b>OS:</b> @systemInfo.OperatingSystem</HxListGroupItem>
            <HxListGroupItem><b>OS Version:</b> @systemInfo.OperatingSystemVersion</HxListGroupItem>
            <HxListGroupItem><b >Runtime Version:</b> @systemInfo.RunTimeVersion</HxListGroupItem>
            <HxListGroupItem><b>Output Directory:</b> @systemInfo.OutputDirectory</HxListGroupItem>
            <HxListGroupItem><b>Temp Directory:</b> @systemInfo.TempDirectory</HxListGroupItem>
        </HxListGroup>
    </div>

    <div class="col-6">
        <HxListGroup Flush="true">
            @if (!string.IsNullOrWhiteSpace(systemInfo.Api))
            {
                <HxListGroupItem><a href="@systemInfo.Api" target="_blank">Swagger Api</a></HxListGroupItem>
            }

            <HxListGroupItem><a href="@systemInfo.GitHub" target="_blank">Website</a></HxListGroupItem>
            <HxListGroupItem><a href="@systemInfo.Documentation" target="_blank">Documentation</a></HxListGroupItem>
            <HxListGroupItem><a href="@systemInfo.Forums" target="_blank">Forums</a></HxListGroupItem>
            <HxListGroupItem><a href="@systemInfo.Issues" target="_blank">Report an Issue</a></HxListGroupItem>
            <HxListGroupItem><a href="@systemInfo.Donate" target="_blank">Donate</a></HxListGroupItem>
        </HxListGroup>
    </div>

</div>

@code {
    private SystemInfoGetResponse systemInfo;

    public SystemInfo() : base(nameof(SystemInfo))
    {
        systemInfo = new SystemInfoGetResponse();
    }

    protected override async Task OnInitializedAsync()
    {
        using var tracing = Tracing.ClientTrace($"{nameof(SystemInfo)}.{nameof(OnInitializedAsync)}", kind: ActivityKind.Client);

        var settings = await _apiClient.SettingsGetAsync();
        systemInfo = await _apiClient.SystemInfoGetAsync(new SystemInfoGetRequest() { CheckForUpdate = settings.App.CheckForUpdates });
    }
}
