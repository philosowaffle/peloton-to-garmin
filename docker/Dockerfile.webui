###################
# CREATE FINAL LAYER
###################
FROM mcr.microsoft.com/dotnet/aspnet:6.0 as final

RUN apt-get update \
	&& apt-get -y install bash tzdata \
	&& apt-get purge -y -f --force-yes $EXT_BUILD_DEPS \
	&& apt-get autoremove -y \
	&& apt-get clean \
	&& rm -rf /var/lib/apt/lists/*

RUN groupadd -g 1015 p2g && useradd -g p2g -u 1015 p2g

WORKDIR /app

###################
# BUILD LAYER
###################
FROM mcr.microsoft.com/dotnet/sdk:6.0 AS build

COPY . /build
WORKDIR /build

SHELL ["/bin/bash", "-c"]

RUN dotnet tool install -g Microsoft.Web.LibraryManager.Cli \
	&& /root/.dotnet/tools/libman --version

ARG TARGETPLATFORM
ARG VERSION

RUN echo $TARGETPLATFORM \
	&& echo $VERSION
ENV VERSION=${VERSION}

RUN if [[ "$TARGETPLATFORM" = "linux/arm64" ]] ; \
		then export RUNTIME=linux-arm64; \
	elif [[ "$TARGETPLATFORM" = "linux/arm/v7" ]] ; \
		then export RUNTIME=linux-arm; \
	else \
		export RUNTIME=linux-x64; \
	fi

RUN echo $RUNTIME

###################
# BUILD WebUI
###################

WORKDIR /build/src/WebUI
RUN /root/.dotnet/tools/libman restore

WORKDIR /build
RUN dotnet publish /build/src/WebUI/WebUI.csproj -c Release -r $RUNTIME -o /build/published --version-suffix $VERSION --self-contained

###################
# FINAL
###################
FROM final

COPY --from=build /build/published .
COPY --from=build /build/LICENSE ./LICENSE
COPY --from=build /build/configuration.example.json ./configuration.local.json

COPY --chmod=770 ./docker/entrypoint.sh .

EXPOSE 80 443
ENTRYPOINT ["/app/entrypoint.sh"]
CMD ["webui"]