###################
# CREATE FINAL LAYER
###################
FROM mcr.microsoft.com/dotnet/aspnet:6.0 as final

ENV PYTHONUNBUFFERED=1
RUN apt-get update \
	&& apt-get -y install bash python3 python3-pip tzdata \
	&& apt-get purge -y -f --force-yes $EXT_BUILD_DEPS \
	&& apt-get autoremove -y \
	&& apt-get clean \
	&& rm -rf /var/lib/apt/lists/* \
	&& ln -sf python3 /usr/bin/python \
	&& pip3 install --no-cache --upgrade pip setuptools \
	&& python --version \
	&& pip3 --version

COPY ./python/requirements.txt ./requirements.txt
RUN pip3 install -r requirements.txt

RUN groupadd -g 1015 p2g && useradd -g p2g -u 1015 p2g

WORKDIR /app

RUN mkdir -m770 {output,data,working}

###################
# BUILD LAYER
###################
FROM --platform=$BUILDPLATFORM mcr.microsoft.com/dotnet/sdk:6.0 AS build

COPY . /build
WORKDIR /build

###################
# BUILD API
###################
ARG VERSION
ENV VERSION=$VERSION

ARG TARGETPLATFORM
RUN if [ "$TARGETPLATFORM" = "linux/amd64" ]; then \
    RID=linux-x64 ; \
    elif [ "$TARGETPLATFORM" = "linux/arm64" ]; then \
    RID=linux-arm64 ; \
    elif [ "$TARGETPLATFORM" = "linux/arm/v7" ]; then \
    RID=linux-arm ; \
    fi \
    && dotnet publish /build/src/Api/Api.csproj -c Release -r $RID -o /build/published --version-suffix $VERSION --self-contained ;

###################
# FINAL
###################
FROM final

COPY --from=build /build/published .
COPY --from=build /build/LICENSE ./LICENSE
COPY --from=build /build/configuration.example.json ./configuration.local.json

COPY --chmod=770 ./docker/entrypoint.sh .

EXPOSE 80 443
ENTRYPOINT ["/app/entrypoint.sh"]
CMD ["api"]